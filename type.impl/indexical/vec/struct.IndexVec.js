(function() {
    var type_impls = Object.fromEntries([["indexical",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-IndexVec%3C'a,+K,+V,+P%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/indexical/vec.rs.html#97-113\">Source</a><a href=\"#impl-Clone-for-IndexVec%3C'a,+K,+V,+P%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, K, V, P&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"indexical/vec/struct.IndexVec.html\" title=\"struct indexical::vec::IndexVec\">IndexVec</a>&lt;'a, K, V, P&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"indexical/trait.IndexedValue.html\" title=\"trait indexical::IndexedValue\">IndexedValue</a> + 'a,\n    P: <a class=\"trait\" href=\"indexical/pointer/trait.PointerFamily.html\" title=\"trait indexical::pointer::PointerFamily\">PointerFamily</a>&lt;'a&gt;,\n    V: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/indexical/vec.rs.html#103-108\">Source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Self</h4></section></summary><div class='docblock'>Returns a duplicate of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/indexical/vec.rs.html#110-112\">Source</a><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","indexical::vec::RcIndexVec","indexical::vec::ArcIndexVec","indexical::vec::RefIndexVec"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3C%3CK+as+IndexedValue%3E::Index%3E-for-IndexVec%3C'a,+K,+V,+P%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/indexical/vec.rs.html#134-144\">Source</a><a href=\"#impl-Index%3C%3CK+as+IndexedValue%3E::Index%3E-for-IndexVec%3C'a,+K,+V,+P%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, K, V, P&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;&lt;K as <a class=\"trait\" href=\"indexical/trait.IndexedValue.html\" title=\"trait indexical::IndexedValue\">IndexedValue</a>&gt;::<a class=\"associatedtype\" href=\"indexical/trait.IndexedValue.html#associatedtype.Index\" title=\"type indexical::IndexedValue::Index\">Index</a>&gt; for <a class=\"struct\" href=\"indexical/vec/struct.IndexVec.html\" title=\"struct indexical::vec::IndexVec\">IndexVec</a>&lt;'a, K, V, P&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"indexical/trait.IndexedValue.html\" title=\"trait indexical::IndexedValue\">IndexedValue</a> + 'a,\n    P: <a class=\"trait\" href=\"indexical/pointer/trait.PointerFamily.html\" title=\"trait indexical::pointer::PointerFamily\">PointerFamily</a>&lt;'a&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/indexical/vec.rs.html#139\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = V</h4></section></summary><div class='docblock'>The returned type after indexing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/indexical/vec.rs.html#141-143\">Source</a><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#tymethod.index\" class=\"fn\">index</a>(&amp;self, index: K::<a class=\"associatedtype\" href=\"indexical/trait.IndexedValue.html#associatedtype.Index\" title=\"type indexical::IndexedValue::Index\">Index</a>) -&gt; &amp;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#associatedtype.Output\" title=\"type core::ops::index::Index::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#tymethod.index\">Read more</a></div></details></div></details>","Index<<K as IndexedValue>::Index>","indexical::vec::RcIndexVec","indexical::vec::ArcIndexVec","indexical::vec::RefIndexVec"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IndexMut%3C%3CK+as+IndexedValue%3E::Index%3E-for-IndexVec%3C'a,+K,+V,+P%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/indexical/vec.rs.html#146-154\">Source</a><a href=\"#impl-IndexMut%3C%3CK+as+IndexedValue%3E::Index%3E-for-IndexVec%3C'a,+K,+V,+P%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, K, V, P&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.IndexMut.html\" title=\"trait core::ops::index::IndexMut\">IndexMut</a>&lt;&lt;K as <a class=\"trait\" href=\"indexical/trait.IndexedValue.html\" title=\"trait indexical::IndexedValue\">IndexedValue</a>&gt;::<a class=\"associatedtype\" href=\"indexical/trait.IndexedValue.html#associatedtype.Index\" title=\"type indexical::IndexedValue::Index\">Index</a>&gt; for <a class=\"struct\" href=\"indexical/vec/struct.IndexVec.html\" title=\"struct indexical::vec::IndexVec\">IndexVec</a>&lt;'a, K, V, P&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"indexical/trait.IndexedValue.html\" title=\"trait indexical::IndexedValue\">IndexedValue</a> + 'a,\n    P: <a class=\"trait\" href=\"indexical/pointer/trait.PointerFamily.html\" title=\"trait indexical::pointer::PointerFamily\">PointerFamily</a>&lt;'a&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.index_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/indexical/vec.rs.html#151-153\">Source</a><a href=\"#method.index_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.IndexMut.html#tymethod.index_mut\" class=\"fn\">index_mut</a>(&amp;mut self, index: K::<a class=\"associatedtype\" href=\"indexical/trait.IndexedValue.html#associatedtype.Index\" title=\"type indexical::IndexedValue::Index\">Index</a>) -&gt; &amp;mut Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#associatedtype.Output\" title=\"type core::ops::index::Index::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the mutable indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.IndexMut.html#tymethod.index_mut\">Read more</a></div></details></div></details>","IndexMut<<K as IndexedValue>::Index>","indexical::vec::RcIndexVec","indexical::vec::ArcIndexVec","indexical::vec::RefIndexVec"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IndexVec%3C'a,+K,+V,+P%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/indexical/vec.rs.html#21-35\">Source</a><a href=\"#impl-IndexVec%3C'a,+K,+V,+P%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, K, V, P&gt; <a class=\"struct\" href=\"indexical/vec/struct.IndexVec.html\" title=\"struct indexical::vec::IndexVec\">IndexVec</a>&lt;'a, K, V, P&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"indexical/trait.IndexedValue.html\" title=\"trait indexical::IndexedValue\">IndexedValue</a> + 'a,\n    P: <a class=\"trait\" href=\"indexical/pointer/trait.PointerFamily.html\" title=\"trait indexical::pointer::PointerFamily\">PointerFamily</a>&lt;'a&gt;,\n    V: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_elem\" class=\"method\"><a class=\"src rightside\" href=\"src/indexical/vec.rs.html#28-34\">Source</a><h4 class=\"code-header\">pub fn <a href=\"indexical/vec/struct.IndexVec.html#tymethod.from_elem\" class=\"fn\">from_elem</a>(elem: V, domain: &amp;P::<a class=\"associatedtype\" href=\"indexical/pointer/trait.PointerFamily.html#associatedtype.Pointer\" title=\"type indexical::pointer::PointerFamily::Pointer\">Pointer</a>&lt;<a class=\"struct\" href=\"indexical/struct.IndexedDomain.html\" title=\"struct indexical::IndexedDomain\">IndexedDomain</a>&lt;K&gt;&gt;) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Constructs a new vector where each index maps to the initial element <code>elem</code>.</p>\n</div></details></div></details>",0,"indexical::vec::RcIndexVec","indexical::vec::ArcIndexVec","indexical::vec::RefIndexVec"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IndexVec%3C'a,+K,+V,+P%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/indexical/vec.rs.html#37-95\">Source</a><a href=\"#impl-IndexVec%3C'a,+K,+V,+P%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, K, V, P&gt; <a class=\"struct\" href=\"indexical/vec/struct.IndexVec.html\" title=\"struct indexical::vec::IndexVec\">IndexVec</a>&lt;'a, K, V, P&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"indexical/trait.IndexedValue.html\" title=\"trait indexical::IndexedValue\">IndexedValue</a> + 'a,\n    P: <a class=\"trait\" href=\"indexical/pointer/trait.PointerFamily.html\" title=\"trait indexical::pointer::PointerFamily\">PointerFamily</a>&lt;'a&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_fn\" class=\"method\"><a class=\"src rightside\" href=\"src/indexical/vec.rs.html#43-49\">Source</a><h4 class=\"code-header\">pub fn <a href=\"indexical/vec/struct.IndexVec.html#tymethod.from_fn\" class=\"fn\">from_fn</a>(\n    f: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(K::<a class=\"associatedtype\" href=\"indexical/trait.IndexedValue.html#associatedtype.Index\" title=\"type indexical::IndexedValue::Index\">Index</a>) -&gt; V,\n    domain: &amp;P::<a class=\"associatedtype\" href=\"indexical/pointer/trait.PointerFamily.html#associatedtype.Pointer\" title=\"type indexical::pointer::PointerFamily::Pointer\">Pointer</a>&lt;<a class=\"struct\" href=\"indexical/struct.IndexedDomain.html\" title=\"struct indexical::IndexedDomain\">IndexedDomain</a>&lt;K&gt;&gt;,\n) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Constructs a new vector where each index maps to the output of <code>f(index)</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><a class=\"src rightside\" href=\"src/indexical/vec.rs.html#52-56\">Source</a><h4 class=\"code-header\">pub fn <a href=\"indexical/vec/struct.IndexVec.html#tymethod.get\" class=\"fn\">get</a>&lt;M&gt;(&amp;self, idx: impl <a class=\"trait\" href=\"indexical/trait.ToIndex.html\" title=\"trait indexical::ToIndex\">ToIndex</a>&lt;K, M&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;V</a></h4></section></summary><div class=\"docblock\"><p>Returns an immutable reference to a value for a given index.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/indexical/vec.rs.html#59-63\">Source</a><h4 class=\"code-header\">pub fn <a href=\"indexical/vec/struct.IndexVec.html#tymethod.get_mut\" class=\"fn\">get_mut</a>&lt;M&gt;(&amp;mut self, idx: impl <a class=\"trait\" href=\"indexical/trait.ToIndex.html\" title=\"trait indexical::ToIndex\">ToIndex</a>&lt;K, M&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut V</a></h4></section></summary><div class=\"docblock\"><p>Returns a mutable reference to a value for a given index.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><a class=\"src rightside\" href=\"src/indexical/vec.rs.html#66-68\">Source</a><h4 class=\"code-header\">pub fn <a href=\"indexical/vec/struct.IndexVec.html#tymethod.iter\" class=\"fn\">iter</a>(\n    &amp;self,\n) -&gt; impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/double_ended/trait.DoubleEndedIterator.html\" title=\"trait core::iter::traits::double_ended::DoubleEndedIterator\">DoubleEndedIterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;V</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/exact_size/trait.ExactSizeIterator.html\" title=\"trait core::iter::traits::exact_size::ExactSizeIterator\">ExactSizeIterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;V</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns an iterator over immutable references to the values.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/indexical/vec.rs.html#71-75\">Source</a><h4 class=\"code-header\">pub fn <a href=\"indexical/vec/struct.IndexVec.html#tymethod.iter_mut\" class=\"fn\">iter_mut</a>(\n    &amp;mut self,\n) -&gt; impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/double_ended/trait.DoubleEndedIterator.html\" title=\"trait core::iter::traits::double_ended::DoubleEndedIterator\">DoubleEndedIterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut V</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/exact_size/trait.ExactSizeIterator.html\" title=\"trait core::iter::traits::exact_size::ExactSizeIterator\">ExactSizeIterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut V</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns an iterator over mutable references to the values.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_slice\" class=\"method\"><a class=\"src rightside\" href=\"src/indexical/vec.rs.html#78-80\">Source</a><h4 class=\"code-header\">pub fn <a href=\"indexical/vec/struct.IndexVec.html#tymethod.as_slice\" class=\"fn\">as_slice</a>(&amp;self) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[V]</a></h4></section></summary><div class=\"docblock\"><p>Returns the underlying vector as a slice.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_slice_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/indexical/vec.rs.html#83-85\">Source</a><h4 class=\"code-header\">pub fn <a href=\"indexical/vec/struct.IndexVec.html#tymethod.as_slice_mut\" class=\"fn\">as_slice_mut</a>(&amp;mut self) -&gt; &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[V]</a></h4></section></summary><div class=\"docblock\"><p>Returns the underlying vector as a mutable slice.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_disjoint_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/indexical/vec.rs.html#89-94\">Source</a><h4 class=\"code-header\">pub fn <a href=\"indexical/vec/struct.IndexVec.html#tymethod.get_disjoint_mut\" class=\"fn\">get_disjoint_mut</a>&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;(\n    &amp;mut self,\n    indices: [K::<a class=\"associatedtype\" href=\"indexical/trait.IndexedValue.html#associatedtype.Index\" title=\"type indexical::IndexedValue::Index\">Index</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">N</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut V</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">N</a>], <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/slice/enum.GetDisjointMutError.html\" title=\"enum core::slice::GetDisjointMutError\">GetDisjointMutError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns multiple mutable references to disjoint indices,\nor a <a href=\"https://doc.rust-lang.org/nightly/core/slice/enum.GetDisjointMutError.html\" title=\"enum core::slice::GetDisjointMutError\"><code>GetDisjointMutError</code></a> if not disjoint or in-bounds.</p>\n</div></details></div></details>",0,"indexical::vec::RcIndexVec","indexical::vec::ArcIndexVec","indexical::vec::RefIndexVec"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-IndexVec%3C'a,+K,+V,+P%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/indexical/vec.rs.html#115-124\">Source</a><a href=\"#impl-PartialEq-for-IndexVec%3C'a,+K,+V,+P%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, K, V, P&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"indexical/vec/struct.IndexVec.html\" title=\"struct indexical::vec::IndexVec\">IndexVec</a>&lt;'a, K, V, P&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"indexical/trait.IndexedValue.html\" title=\"trait indexical::IndexedValue\">IndexedValue</a> + 'a,\n    P: <a class=\"trait\" href=\"indexical/pointer/trait.PointerFamily.html\" title=\"trait indexical::pointer::PointerFamily\">PointerFamily</a>&lt;'a&gt;,\n    V: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/indexical/vec.rs.html#121-123\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;Self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#265\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","indexical::vec::RcIndexVec","indexical::vec::ArcIndexVec","indexical::vec::RefIndexVec"],["<section id=\"impl-Eq-for-IndexVec%3C'a,+K,+V,+P%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/indexical/vec.rs.html#126-132\">Source</a><a href=\"#impl-Eq-for-IndexVec%3C'a,+K,+V,+P%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, K, V, P&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"indexical/vec/struct.IndexVec.html\" title=\"struct indexical::vec::IndexVec\">IndexVec</a>&lt;'a, K, V, P&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"indexical/trait.IndexedValue.html\" title=\"trait indexical::IndexedValue\">IndexedValue</a> + 'a,\n    P: <a class=\"trait\" href=\"indexical/pointer/trait.PointerFamily.html\" title=\"trait indexical::pointer::PointerFamily\">PointerFamily</a>&lt;'a&gt;,\n    V: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,</div></h3></section>","Eq","indexical::vec::RcIndexVec","indexical::vec::ArcIndexVec","indexical::vec::RefIndexVec"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[22399]}