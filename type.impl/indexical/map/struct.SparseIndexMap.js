(function() {
    var type_impls = Object.fromEntries([["indexical",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromIndexicalIterator%3C'a,+K,+P,+M,+(U,+V)%3E-for-SparseIndexMap%3C'a,+K,+V,+P%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/indexical/map.rs.html#146-164\">Source</a><a href=\"#impl-FromIndexicalIterator%3C'a,+K,+P,+M,+(U,+V)%3E-for-SparseIndexMap%3C'a,+K,+V,+P%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, K, V, P, M, U&gt; <a class=\"trait\" href=\"indexical/trait.FromIndexicalIterator.html\" title=\"trait indexical::FromIndexicalIterator\">FromIndexicalIterator</a>&lt;'a, K, P, M, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(U, V)</a>&gt; for <a class=\"struct\" href=\"indexical/map/struct.SparseIndexMap.html\" title=\"struct indexical::map::SparseIndexMap\">SparseIndexMap</a>&lt;'a, K, V, P&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"indexical/trait.IndexedValue.html\" title=\"trait indexical::IndexedValue\">IndexedValue</a> + 'a,\n    P: <a class=\"trait\" href=\"indexical/pointer/trait.PointerFamily.html\" title=\"trait indexical::pointer::PointerFamily\">PointerFamily</a>&lt;'a&gt;,\n    U: <a class=\"trait\" href=\"indexical/trait.ToIndex.html\" title=\"trait indexical::ToIndex\">ToIndex</a>&lt;K, M&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_indexical_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/indexical/map.rs.html#152-163\">Source</a><a href=\"#method.from_indexical_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"indexical/trait.FromIndexicalIterator.html#tymethod.from_indexical_iter\" class=\"fn\">from_indexical_iter</a>(\n    iter: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(U, V)</a>&gt;,\n    domain: &amp;P::<a class=\"associatedtype\" href=\"indexical/pointer/trait.PointerFamily.html#associatedtype.Pointer\" title=\"type indexical::pointer::PointerFamily::Pointer\">Pointer</a>&lt;<a class=\"struct\" href=\"indexical/struct.IndexedDomain.html\" title=\"struct indexical::IndexedDomain\">IndexedDomain</a>&lt;K&gt;&gt;,\n) -&gt; Self</h4></section></summary><div class='docblock'>Converts an iterator into a collection within the given domain.</div></details></div></details>","FromIndexicalIterator<'a, K, P, M, (U, V)>","indexical::map::SparseRcIndexMap","indexical::map::SparseArcIndexMap","indexical::map::SparseRefIndexMap"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3C%3CK+as+IndexedValue%3E::Index%3E-for-SparseIndexMap%3C'a,+K,+V,+P%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/indexical/map.rs.html#124-134\">Source</a><a href=\"#impl-Index%3C%3CK+as+IndexedValue%3E::Index%3E-for-SparseIndexMap%3C'a,+K,+V,+P%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, K, V, P&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;&lt;K as <a class=\"trait\" href=\"indexical/trait.IndexedValue.html\" title=\"trait indexical::IndexedValue\">IndexedValue</a>&gt;::<a class=\"associatedtype\" href=\"indexical/trait.IndexedValue.html#associatedtype.Index\" title=\"type indexical::IndexedValue::Index\">Index</a>&gt; for <a class=\"struct\" href=\"indexical/map/struct.SparseIndexMap.html\" title=\"struct indexical::map::SparseIndexMap\">SparseIndexMap</a>&lt;'a, K, V, P&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"indexical/trait.IndexedValue.html\" title=\"trait indexical::IndexedValue\">IndexedValue</a> + 'a,\n    P: <a class=\"trait\" href=\"indexical/pointer/trait.PointerFamily.html\" title=\"trait indexical::pointer::PointerFamily\">PointerFamily</a>&lt;'a&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/indexical/map.rs.html#129\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = V</h4></section></summary><div class='docblock'>The returned type after indexing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/indexical/map.rs.html#131-133\">Source</a><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#tymethod.index\" class=\"fn\">index</a>(&amp;self, index: K::<a class=\"associatedtype\" href=\"indexical/trait.IndexedValue.html#associatedtype.Index\" title=\"type indexical::IndexedValue::Index\">Index</a>) -&gt; &amp;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#associatedtype.Output\" title=\"type core::ops::index::Index::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#tymethod.index\">Read more</a></div></details></div></details>","Index<<K as IndexedValue>::Index>","indexical::map::SparseRcIndexMap","indexical::map::SparseArcIndexMap","indexical::map::SparseRefIndexMap"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IndexMut%3C%3CK+as+IndexedValue%3E::Index%3E-for-SparseIndexMap%3C'a,+K,+V,+P%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/indexical/map.rs.html#136-144\">Source</a><a href=\"#impl-IndexMut%3C%3CK+as+IndexedValue%3E::Index%3E-for-SparseIndexMap%3C'a,+K,+V,+P%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, K, V, P&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.IndexMut.html\" title=\"trait core::ops::index::IndexMut\">IndexMut</a>&lt;&lt;K as <a class=\"trait\" href=\"indexical/trait.IndexedValue.html\" title=\"trait indexical::IndexedValue\">IndexedValue</a>&gt;::<a class=\"associatedtype\" href=\"indexical/trait.IndexedValue.html#associatedtype.Index\" title=\"type indexical::IndexedValue::Index\">Index</a>&gt; for <a class=\"struct\" href=\"indexical/map/struct.SparseIndexMap.html\" title=\"struct indexical::map::SparseIndexMap\">SparseIndexMap</a>&lt;'a, K, V, P&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"indexical/trait.IndexedValue.html\" title=\"trait indexical::IndexedValue\">IndexedValue</a> + 'a,\n    P: <a class=\"trait\" href=\"indexical/pointer/trait.PointerFamily.html\" title=\"trait indexical::pointer::PointerFamily\">PointerFamily</a>&lt;'a&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.index_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/indexical/map.rs.html#141-143\">Source</a><a href=\"#method.index_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.IndexMut.html#tymethod.index_mut\" class=\"fn\">index_mut</a>(&amp;mut self, index: K::<a class=\"associatedtype\" href=\"indexical/trait.IndexedValue.html#associatedtype.Index\" title=\"type indexical::IndexedValue::Index\">Index</a>) -&gt; &amp;mut Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#associatedtype.Output\" title=\"type core::ops::index::Index::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the mutable indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.IndexMut.html#tymethod.index_mut\">Read more</a></div></details></div></details>","IndexMut<<K as IndexedValue>::Index>","indexical::map::SparseRcIndexMap","indexical::map::SparseArcIndexMap","indexical::map::SparseRefIndexMap"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-SparseIndexMap%3C'a,+K,+V,+P%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/indexical/map.rs.html#105-114\">Source</a><a href=\"#impl-PartialEq-for-SparseIndexMap%3C'a,+K,+V,+P%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, K, V, P&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"indexical/map/struct.SparseIndexMap.html\" title=\"struct indexical::map::SparseIndexMap\">SparseIndexMap</a>&lt;'a, K, V, P&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"indexical/trait.IndexedValue.html\" title=\"trait indexical::IndexedValue\">IndexedValue</a> + 'a,\n    P: <a class=\"trait\" href=\"indexical/pointer/trait.PointerFamily.html\" title=\"trait indexical::pointer::PointerFamily\">PointerFamily</a>&lt;'a&gt;,\n    V: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/indexical/map.rs.html#111-113\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;Self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#265\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","indexical::map::SparseRcIndexMap","indexical::map::SparseArcIndexMap","indexical::map::SparseRefIndexMap"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SparseIndexMap%3C'a,+K,+V,+P%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/indexical/map.rs.html#34-103\">Source</a><a href=\"#impl-SparseIndexMap%3C'a,+K,+V,+P%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, K, V, P&gt; <a class=\"struct\" href=\"indexical/map/struct.SparseIndexMap.html\" title=\"struct indexical::map::SparseIndexMap\">SparseIndexMap</a>&lt;'a, K, V, P&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"indexical/trait.IndexedValue.html\" title=\"trait indexical::IndexedValue\">IndexedValue</a> + 'a,\n    P: <a class=\"trait\" href=\"indexical/pointer/trait.PointerFamily.html\" title=\"trait indexical::pointer::PointerFamily\">PointerFamily</a>&lt;'a&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/indexical/map.rs.html#40-45\">Source</a><h4 class=\"code-header\">pub fn <a href=\"indexical/map/struct.SparseIndexMap.html#tymethod.new\" class=\"fn\">new</a>(domain: &amp;P::<a class=\"associatedtype\" href=\"indexical/pointer/trait.PointerFamily.html#associatedtype.Pointer\" title=\"type indexical::pointer::PointerFamily::Pointer\">Pointer</a>&lt;<a class=\"struct\" href=\"indexical/struct.IndexedDomain.html\" title=\"struct indexical::IndexedDomain\">IndexedDomain</a>&lt;K&gt;&gt;) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Constructs an empty map within the given domain.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><a class=\"src rightside\" href=\"src/indexical/map.rs.html#48-51\">Source</a><h4 class=\"code-header\">pub fn <a href=\"indexical/map/struct.SparseIndexMap.html#tymethod.get\" class=\"fn\">get</a>&lt;M&gt;(&amp;self, key: impl <a class=\"trait\" href=\"indexical/trait.ToIndex.html\" title=\"trait indexical::ToIndex\">ToIndex</a>&lt;K, M&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;V</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns an immutable reference to a value for a given key if it exists.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/indexical/map.rs.html#54-57\">Source</a><h4 class=\"code-header\">pub fn <a href=\"indexical/map/struct.SparseIndexMap.html#tymethod.get_mut\" class=\"fn\">get_mut</a>&lt;M&gt;(&amp;mut self, key: impl <a class=\"trait\" href=\"indexical/trait.ToIndex.html\" title=\"trait indexical::ToIndex\">ToIndex</a>&lt;K, M&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut V</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a mutable reference to a value for a given key if it exists.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_unchecked\" class=\"method\"><a class=\"src rightside\" href=\"src/indexical/map.rs.html#63-66\">Source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"indexical/map/struct.SparseIndexMap.html#tymethod.get_unchecked\" class=\"fn\">get_unchecked</a>&lt;M&gt;(&amp;self, key: impl <a class=\"trait\" href=\"indexical/trait.ToIndex.html\" title=\"trait indexical::ToIndex\">ToIndex</a>&lt;K, M&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;V</a></h4></section></summary><div class=\"docblock\"><p>Returns a reference to a value for a given key.</p>\n<h5 id=\"safety\"><a class=\"doc-anchor\" href=\"#safety\">§</a>Safety</h5>\n<p>This function has undefined behavior if <code>key</code> is not in <code>self</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_unchecked_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/indexical/map.rs.html#72-75\">Source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"indexical/map/struct.SparseIndexMap.html#tymethod.get_unchecked_mut\" class=\"fn\">get_unchecked_mut</a>&lt;M&gt;(&amp;mut self, key: impl <a class=\"trait\" href=\"indexical/trait.ToIndex.html\" title=\"trait indexical::ToIndex\">ToIndex</a>&lt;K, M&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut V</a></h4></section></summary><div class=\"docblock\"><p>Returns a mutable reference to a value for a given key.</p>\n<h5 id=\"safety-1\"><a class=\"doc-anchor\" href=\"#safety-1\">§</a>Safety</h5>\n<p>This function has undefined behavior if <code>key</code> is not in <code>self</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method\"><a class=\"src rightside\" href=\"src/indexical/map.rs.html#78-81\">Source</a><h4 class=\"code-header\">pub fn <a href=\"indexical/map/struct.SparseIndexMap.html#tymethod.insert\" class=\"fn\">insert</a>&lt;M&gt;(&amp;mut self, key: impl <a class=\"trait\" href=\"indexical/trait.ToIndex.html\" title=\"trait indexical::ToIndex\">ToIndex</a>&lt;K, M&gt;, value: V)</h4></section></summary><div class=\"docblock\"><p>Inserts the key/value pair into <code>self</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.values\" class=\"method\"><a class=\"src rightside\" href=\"src/indexical/map.rs.html#84-86\">Source</a><h4 class=\"code-header\">pub fn <a href=\"indexical/map/struct.SparseIndexMap.html#tymethod.values\" class=\"fn\">values</a>(&amp;self) -&gt; impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/exact_size/trait.ExactSizeIterator.html\" title=\"trait core::iter::traits::exact_size::ExactSizeIterator\">ExactSizeIterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;V</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns an iterator over the values of the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.entry\" class=\"method\"><a class=\"src rightside\" href=\"src/indexical/map.rs.html#89-92\">Source</a><h4 class=\"code-header\">pub fn <a href=\"indexical/map/struct.SparseIndexMap.html#tymethod.entry\" class=\"fn\">entry</a>&lt;M&gt;(&amp;mut self, key: impl <a class=\"trait\" href=\"indexical/trait.ToIndex.html\" title=\"trait indexical::ToIndex\">ToIndex</a>&lt;K, M&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/std/collections/hash/map/enum.Entry.html\" title=\"enum std::collections::hash::map::Entry\">Entry</a>&lt;'_, K::<a class=\"associatedtype\" href=\"indexical/trait.IndexedValue.html#associatedtype.Index\" title=\"type indexical::IndexedValue::Index\">Index</a>, V&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a mutable entry into the map for the given key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.len\" class=\"method\"><a class=\"src rightside\" href=\"src/indexical/map.rs.html#95-97\">Source</a><h4 class=\"code-header\">pub fn <a href=\"indexical/map/struct.SparseIndexMap.html#tymethod.len\" class=\"fn\">len</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Returns the number of entries in the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_empty\" class=\"method\"><a class=\"src rightside\" href=\"src/indexical/map.rs.html#100-102\">Source</a><h4 class=\"code-header\">pub fn <a href=\"indexical/map/struct.SparseIndexMap.html#tymethod.is_empty\" class=\"fn\">is_empty</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns true if the map has no elements.</p>\n</div></details></div></details>",0,"indexical::map::SparseRcIndexMap","indexical::map::SparseArcIndexMap","indexical::map::SparseRefIndexMap"],["<section id=\"impl-Eq-for-SparseIndexMap%3C'a,+K,+V,+P%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/indexical/map.rs.html#116-122\">Source</a><a href=\"#impl-Eq-for-SparseIndexMap%3C'a,+K,+V,+P%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, K, V, P&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"indexical/map/struct.SparseIndexMap.html\" title=\"struct indexical::map::SparseIndexMap\">SparseIndexMap</a>&lt;'a, K, V, P&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"indexical/trait.IndexedValue.html\" title=\"trait indexical::IndexedValue\">IndexedValue</a> + 'a,\n    P: <a class=\"trait\" href=\"indexical/pointer/trait.PointerFamily.html\" title=\"trait indexical::pointer::PointerFamily\">PointerFamily</a>&lt;'a&gt;,\n    V: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,</div></h3></section>","Eq","indexical::map::SparseRcIndexMap","indexical::map::SparseArcIndexMap","indexical::map::SparseRefIndexMap"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[21085]}