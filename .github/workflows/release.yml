name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  test:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v1
      - uses: actions-rs/cargo@v1
        with:
          command: test
      - uses: actions-rs/cargo@v1
        with:
          command: install
          args: --path . --debug
      - run: npm install && npm run build
        working-directory: ide
      - run: pip3 install -r scripts/requirements.txt && python3 scripts/check_versions.py

  build-artifacts:
    needs: test
    strategy:
      matrix:
        include:
          - os: ubuntu-20.04
            target: x86_64-unknown-linux-gnu
          - os: ubuntu-20.04
            target: aarch64-unknown-linux-gnu
          - os: macos-10.15
            target: x86_64-apple-darwin
          - os: macos-10.15
            target: aarch64-apple-darwin
          - os: windows-2019
            target: x86_64-pc-windows-msvc
          - os: windows-2019
            target: aarch64-pc-windows-msvc
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v1
      - run: rustup target add ${{ matrix.target }}
      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target ${{ matrix.target }}
      - run: tar -czf ${{ matrix.target }}.tar.gz cargo-flowistry flowistry-driver
        working-directory: target/${{ matrix.target }}/release
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.target }}
          path: target/${{ matrix.target }}/release/${{ matrix.target }}.tar.gz

  publish-release:
    needs: build-artifacts
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/download-artifact@v2
      - uses: softprops/action-gh-release@v1
        with:
          files: |
            x86_64-unknown-linux-gnu/x86_64-unknown-linux-gnu.tar.gz
            x86_64-apple-darwin/x86_64-apple-darwin.tar.gz          

  publish-extension:
    needs: publish-release
    runs-on: ubuntu-20.04
    steps:
       - uses: actions/checkout@v1
       - run: cd ide && npm install
       - run: cd ide && npm install -g vsce && vsce publish -p ${{ secrets.VSCODE_TOKEN }}
       - run: cd ide && npm install -g ovsx && npx ovsx publish -p ${{ secrets.OVSX_TOKEN }}
          
  publish-crate:
    needs: publish-extension
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v1
      - run: cargo login ${{ secrets.CRATES_IO_TOKEN }}
      - uses: actions-rs/cargo@v1
        with:
          command: publish

